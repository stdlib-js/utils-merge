{"version":3,"file":"index.mjs","sources":["../lib/defaults.js","../lib/deepmerge.js","../lib/mergefcn.js","../lib/main.js","../lib/factory.js","../lib/validate.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport PINF from '@stdlib/constants-float64-pinf' ;\n\n\n// MAIN //\n\nvar DEFAULTS = {\n\t'level': PINF,\n\t'override': true,\n\t'extend': true,\n\t'copy': true\n};\n\n\n// EXPORTS //\n\nexport default DEFAULTS;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport objectKeys from '@stdlib/utils-keys' ;\nimport isObject from '@stdlib/assert-is-object' ;\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport isBuffer from '@stdlib/assert-is-buffer' ;\nimport isFunction from '@stdlib/assert-is-function' ;\nimport typeOf from '@stdlib/utils-type-of' ;\nimport deepCopy from '@stdlib/utils-copy' ;\n\n\n// MAIN //\n\n/**\n* Merges a source object into a target object.\n*\n* @private\n* @param {Object} target - target object\n* @param {Object} source - source object\n* @param {number} level - merge level\n* @param {boolean} copy - indicates whether to perform a deep copy of merged values\n* @param {(boolean|Function)} override - defines the merge strategy\n* @param {boolean} extend - indicates whether new properties can be added to the target object\n*/\nfunction deepMerge( target, source, level, copy, override, extend ) {\n\tvar hasProp;\n\tvar isFunc;\n\tvar name;\n\tvar keys;\n\tvar curr;\n\tvar key;\n\tvar val;\n\tvar tmp;\n\tvar i;\n\n\t// Determine if we were provided a custom override strategy:\n\tisFunc = isFunction( override );\n\n\t// Decrement the level:\n\tlevel -= 1;\n\n\t// Loop through the source keys and implement the merge strategy...\n\tkeys = objectKeys( source );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\thasProp = hasOwnProp( target, key );\n\n\t\t// Can we add new properties to the target?\n\t\tif ( !hasProp && !extend ) {\n\t\t\tcontinue;\n\t\t}\n\t\tval = source[ key ];\n\n\t\tif ( hasProp ) {\n\t\t\tcurr = target[ key ];\n\t\t\tname = typeOf( curr );\n\n\t\t\t// Should we recurse to perform a deep(er) merge? (only if both the current value and the proposed value are objects and the level is > 0)\n\t\t\tif (\n\t\t\t\t!isBuffer( curr ) &&\n\t\t\t\tname === 'object' &&\n\t\t\t\tisObject( val ) &&\n\t\t\t\tlevel\n\t\t\t) {\n\t\t\t\tdeepMerge( curr, val, level, copy, override, extend );\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Should we apply a custom merge (override) strategy?\n\t\t\tif ( isFunc ) {\n\t\t\t\ttmp = override( curr, val, key );\n\n\t\t\t\t// WARNING: the following check does NOT prevent shared (leaky) nested references. We only check for top-level reference equality. We will assume that the user knows best, given their having provided a custom override strategy.\n\t\t\t\tif ( copy && tmp !== curr && tmp === val ) {\n\t\t\t\t\ttmp = deepCopy( tmp );\n\t\t\t\t}\n\t\t\t\ttarget[ key ] = tmp;\n\t\t\t}\n\t\t\t// Are we allowed to override an existing target value?\n\t\t\telse if ( override ) {\n\t\t\t\tif ( copy ) {\n\t\t\t\t\ttarget[ key ] = deepCopy( val );\n\t\t\t\t} else {\n\t\t\t\t\ttarget[ key ] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// New property to be added to target object. Should we deep copy the source value?\n\t\telse if ( copy ) {\n\t\t\ttarget[ key ] = deepCopy( val );\n\t\t}\n\t\t// Perform a simple assignment...\n\t\telse {\n\t\t\ttarget[ key ] = val;\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default deepMerge;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-object' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\nimport deepMerge from './deepmerge.js' ;\n\n\n// MAIN //\n\n/**\n* Returns a merge function based on provided options.\n*\n* @private\n* @param {Options} opts - function options\n* @param {number} options.level - merge level\n* @param {boolean} options.copy - boolean indicating whether to deep copy merged values\n* @param {(boolean|Function)} options.override - defines the merge strategy\n* @param {boolean} options.extend - boolean indicating whether new properties can be added to the target object\n* @returns {Function} merge function\n*\n* @example\n* var merge = mergefcn({\n*     'level': Number.POSITIVE_INFINITY,\n*     'copy': true,\n*     'override': true,\n*     'extend': true\n* });\n* // returns <Function>\n*/\nfunction mergefcn( opts ) {\n\treturn merge;\n\n\t/**\n\t* Merges objects into a target object. Note that the target object is mutated.\n\t*\n\t* @private\n\t* @param {Object} target - target object\n\t* @param {...Object} source - source objects (i.e., objects to be merged into the target object)\n\t* @throws {Error} must provide a target object and one or more source objects\n\t* @throws {TypeError} first argument must be an object\n\t* @throws {TypeError} source arguments must be objects\n\t* @returns {Object} merged (target) object\n\t*\n\t* @example\n\t* var target = {\n\t*     'a': 'beep'\n\t* };\n\t* var source = {\n\t*     'a': 'boop',\n\t*     'b': 'bap'\n\t* };\n\t*\n\t* var out = merge( target, source );\n\t* // returns {'a':'boop', 'b':'bap'}\n\t*/\n\tfunction merge( target ) {\n\t\tvar nargs;\n\t\tvar arg;\n\t\tvar src;\n\t\tvar i;\n\n\t\tnargs = arguments.length - 1;\n\t\tif ( nargs < 1 ) {\n\t\t\tthrow new Error( 'insufficient arguments. Must provide both a target object and one or more source objects.' );\n\t\t}\n\t\tif ( !isObject( target ) ) {\n\t\t\tthrow new TypeError( format( '0kj3X', target ) );\n\t\t}\n\t\tsrc = new Array( nargs );\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\targ = arguments[ i+1 ];\n\n\t\t\t// WARNING: this is a porous check. Buffers, Numbers, Booleans, Strings, Dates, RegExp, custom class instances,... will all pass.\n\t\t\tif ( !isObject( arg ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. All arguments must be objects. Index: `%u`. Value: `%s`.', i, arg ) );\n\t\t\t}\n\t\t\tsrc[ i ] = arg;\n\t\t}\n\t\tfor ( i = 0; i < nargs; i++ ) {\n\t\t\tdeepMerge( target, src[ i ], opts.level, opts.copy, opts.override, opts.extend ); // eslint-disable-line max-len\n\t\t}\n\t\treturn target;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default mergefcn;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport defaults from './defaults.js' ;\nimport mergefcn from './mergefcn.js' ;\n\n\n// MAIN //\n\n/**\n* Merges objects into a target object. Note that the target object is mutated.\n*\n* @name merge\n* @type {Function}\n* @param {Object} target - target object\n* @param {...Object} source - source objects (i.e., objects to be merged into the target object)\n* @throws {Error} must provide a target object and one or more source objects\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} source arguments must be objects\n* @returns {Object} merged (target) object\n*\n* @example\n* var target = {\n*     'a': 'beep'\n* };\n* var source = {\n*     'a': 'boop',\n*     'b': 'bap'\n* };\n*\n* var out = merge( target, source );\n* // returns {'a':'boop', 'b':'bap'}\n*/\nvar merge = mergefcn( defaults );\n\n\n// EXPORTS //\n\nexport default merge;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport copy from '@stdlib/utils-copy' ;\nimport validate from './validate.js' ;\nimport defaults from './defaults.js' ;\nimport mergefcn from './mergefcn.js' ;\n\n\n// MAIN //\n\n/**\n* Returns a function for merging and extending objects.\n*\n* @param {Options} options - merge options\n* @param {number} [options.level=Infinity] - merge level\n* @param {boolean} [options.copy=true] - boolean indicating whether to deep copy merged values\n* @param {(boolean|Function)} [options.override=true] - defines the merge strategy\n* @param {boolean} [options.extend=true] - boolean indicating whether new properties can be added to the target object\n* @throws {TypeError} must provide valid options\n* @returns {Function} function which can be used to merge objects\n*\n* @example\n* var opts = {\n*     'level': 100,\n*     'copy': true,\n*     'override': true,\n*     'extend': true\n* };\n*\n* var merge = factory( opts );\n* // returns <Function>\n*/\nfunction factory( options ) {\n\tvar opts;\n\tvar err;\n\topts = copy( defaults );\n\terr = validate( opts, options );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\treturn mergefcn( opts );\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object' ;\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean' ;\nimport isFunction from '@stdlib/assert-is-function' ;\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - options to validate\n* @param {number} [options.level] - merge level\n* @param {boolean} [options.copy] - boolean indicating whether to deep copy merged values\n* @param {(boolean|Function)} [options.override] - defines the merge strategy\n* @param {boolean} [options.extend] - boolean indicating whether new properties can be added to the target object\n* @returns {(Error|null)} error object or null\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '0kj2h', options ) );\n\t}\n\tif ( hasOwnProp( options, 'level' ) ) {\n\t\topts.level = options.level;\n\t\tif ( !isPositiveInteger( opts.level ) ) {\n\t\t\treturn new TypeError( format( '0kj3b', 'level', opts.level ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'copy' ) ) {\n\t\topts.copy = options.copy;\n\t\tif ( !isBoolean( opts.copy ) ) {\n\t\t\treturn new TypeError( format( '0kj30', 'copy', opts.copy ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'override' ) ) {\n\t\topts.override = options.override;\n\t\tif (\n\t\t\t!isBoolean( opts.override ) &&\n\t\t\t!isFunction( opts.override )\n\t\t) {\n\t\t\treturn new TypeError( format( '0kjCJ', 'override', opts.override ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'extend' ) ) {\n\t\topts.extend = options.extend;\n\t\tif ( !isBoolean( opts.extend ) ) {\n\t\t\treturn new TypeError( format( '0kj30', 'extend', opts.extend ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Merge and extend objects.\n*\n* @module @stdlib/utils-merge\n*\n* @example\n* import merge from '@stdlib/utils-merge' ;\n*\n* var target = {\n*     'a': 'beep'\n* };\n* var source = {\n*     'a': 'boop',\n*     'b': 'bap'\n* };\n*\n* var out = merge( target, source );\n* // returns {'a':'boop', 'b':'bap'}\n*\n* @example\n* import { factory as factory } from '@stdlib/utils-merge' ;\n*\n* var opts = {\n*     'level': 100,\n*     'copy': true,\n*     'override': true,\n*     'extend': true\n* };\n*\n* var merge = factory( opts );\n* // returns <Function>\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport factory from './factory.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["DEFAULTS","level","PINF","override","extend","copy","deepMerge","target","source","hasProp","isFunc","name","keys","curr","key","val","tmp","i","isFunction","objectKeys","length","hasOwnProp","typeOf","isBuffer","isObject","deepCopy","mergefcn","opts","nargs","arg","src","arguments","Error","TypeError","format","Array","merge","defaults","factory","options","err","isPositiveInteger","isBoolean","validate","setReadOnly","main"],"mappings":";;oqCA2BA,IAAIA,EAAW,CACdC,MAASC,EACTC,UAAY,EACZC,QAAU,EACVC,MAAQ,GCaT,SAASC,EAAWC,EAAQC,EAAQP,EAAOI,EAAMF,EAAUC,GAC1D,IAAIK,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAUJ,IAPAP,EAASQ,EAAYf,GAGrBF,GAAS,EAGTW,EAAOO,EAAYX,GACbS,EAAI,EAAGA,EAAIL,EAAKQ,OAAQH,IAK7B,GAJAH,EAAMF,EAAMK,IACZR,EAAUY,EAAYd,EAAQO,KAGZV,EAKlB,GAFAW,EAAMP,EAAQM,GAETL,EAAU,CAKd,GAJAI,EAAON,EAAQO,GACfH,EAAOW,EAAQT,IAIbU,EAAUV,IACF,WAATF,GACAa,EAAUT,IACVd,EACC,CACDK,EAAWO,EAAME,EAAKd,EAAOI,EAAMF,EAAUC,GAC7C,QACA,CAEIM,GACJM,EAAMb,EAAUU,EAAME,EAAKD,GAGtBT,GAAQW,IAAQH,GAAQG,IAAQD,IACpCC,EAAMS,EAAUT,IAEjBT,EAAQO,GAAQE,GAGPb,IAERI,EAAQO,GADJT,EACYoB,EAAUV,GAEVA,EAGlB,MAGAR,EAAQO,GADCT,EACOoB,EAAUV,GAIVA,CAGnB,CClEA,SAASW,EAAUC,GAClB,OAyBA,SAAgBpB,GACf,IAAIqB,EACAC,EACAC,EACAb,EAGJ,IADAW,EAAQG,UAAUX,OAAS,GACd,EACZ,MAAM,IAAIY,MAAO,6FAElB,IAAMR,EAAUjB,GACf,MAAM,IAAI0B,UAAWC,EAAQ,QAAS3B,IAGvC,IADAuB,EAAM,IAAIK,MAAOP,GACXX,EAAI,EAAGA,EAAIW,EAAOX,IAAM,CAI7B,IAAMO,EAHNK,EAAME,UAAWd,EAAE,IAIlB,MAAM,IAAIgB,UAAWC,EAAQ,6EAA8EjB,EAAGY,IAE/GC,EAAKb,GAAMY,CACX,CACD,IAAMZ,EAAI,EAAGA,EAAIW,EAAOX,IACvBX,EAAWC,EAAQuB,EAAKb,GAAKU,EAAK1B,MAAO0B,EAAKtB,KAAMsB,EAAKxB,SAAUwB,EAAKvB,QAEzE,OAAOG,CACP,CACF,CCnDG,IAAC6B,EAAQV,EAAUW,GCAtB,SAASC,EAASC,GACjB,IAAIZ,EACAa,EAGJ,GADAA,ECZD,SAAmBb,EAAMY,GACxB,OAAMf,EAAUe,GAGXlB,EAAYkB,EAAS,WACzBZ,EAAK1B,MAAQsC,EAAQtC,OACfwC,EAAmBd,EAAK1B,QACtB,IAAIgC,UAAWC,EAAQ,QAAS,QAASP,EAAK1B,QAGlDoB,EAAYkB,EAAS,UACzBZ,EAAKtB,KAAOkC,EAAQlC,MACdqC,EAAWf,EAAKtB,OACd,IAAI4B,UAAWC,EAAQ,QAAS,OAAQP,EAAKtB,QAGjDgB,EAAYkB,EAAS,cACzBZ,EAAKxB,SAAWoC,EAAQpC,SAEtBuC,EAAWf,EAAKxB,WAChBe,EAAYS,EAAKxB,WAKfkB,EAAYkB,EAAS,YACzBZ,EAAKvB,OAASmC,EAAQnC,QAChBsC,EAAWf,EAAKvB,SACd,IAAI6B,UAAWC,EAAQ,QAAS,SAAUP,EAAKvB,SAGjD,KATE,IAAI6B,UAAWC,EAAQ,QAAS,WAAYP,EAAKxB,WApBlD,IAAI8B,UAAWC,EAAQ,QAASK,GA8BzC,CDpBOI,CADNhB,EAAOtB,EAAMgC,GACSE,GACjBC,EACJ,MAAMA,EAEP,OAAOd,EAAUC,EAClB,CECAiB,EAAAC,EAAA,UAAAP"}